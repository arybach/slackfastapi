---
# ServiceMonitor for FastAPI
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fastapi-monitor
  namespace: prometheus
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: slack-fastapi-app
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
    - port: "8000"
      interval: 60s
      path: "/metrics"

---
# Deployment for Postgres Exporter
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: slack-fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: wrouesnel/postgres_exporter
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://slack-fastapi:slack-fastapi@slack-fastapi-db-service:5432/?sslmode=disable

---
# ServiceMonitor for Postgres Exporter
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9187"
    interval: 60s

---
# Deployment for RabbitMQ Exporter
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-exporter
  namespace: slack-fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-exporter
  template:
    metadata:
      labels:
        app: rabbitmq-exporter
    spec:
      containers:
      - name: rabbitmq-exporter
        image: kbudde/rabbitmq-exporter
        env:
        - name: RABBIT_URL
          value: "http://slack-fastapi-rmq-service:15672"
        - name: RABBIT_USER
          value: "guest"
        - name: RABBIT_PASSWORD
          value: "guest"
---
# ServiceMonitor for RabbitMQ Exporter
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rabbitmq-exporter
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: rabbitmq-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9419"
    interval: 60s

---
# Service definition for Grafana (NodePort type)
apiVersion: v1
kind: Service
metadata:
  namespace: prometheus
  name: kube-prom-stack-grafana
  labels:
    app.kubernetes.io/instance: kube-prom-stack
    app.kubernetes.io/name: grafana
spec:
  type: NodePort
  selector:
    app.kubernetes.io/instance: kube-prom-stack
    app.kubernetes.io/name: grafana
  ports:
  - name: http-web
    port: 80
    targetPort: 3000

---
# Service definition for Prometheus (NodePort type)
apiVersion: v1
kind: Service
metadata:
  namespace: prometheus
  name: kube-prom-stack-kube-prome-prometheus
  labels:
    app.kubernetes.io/instance: kube-prom-stack
    app.kubernetes.io/name: prometheus
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: prometheus
    operator.prometheus.io/name: kube-prom-stack-kube-prome-prometheus
  ports:
  - name: http-web
    port: 9090
    targetPort: 9090
  - name: reloader-web
    port: 8080
    targetPort: reloader-web

# ---
# # Ingress for Prometheus
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: prometheus
#   namespace: prometheus
#   labels:
#     name: prometheus
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     cert-manager.io/cluster-issuer: "yc-clusterissuer"
# spec:
#   rules:
#     - host: prometheus.redevops.io
#       http:
#         paths:
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: kube-prom-stack-kube-prome-prometheus
#                 port:
#                   number: 9090
#   tls:
#     - hosts:
#         - prometheus.redevops.io
#       secretName: prometheus-tls
---
# Ingress for Grafana
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: prometheus
  labels:
    name: grafana
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "yc-clusterissuer"
spec:
  rules:
    - host: grafana.redevops.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: kube-prom-stack-grafana
                port:
                  number: 80
  tls:
    - hosts:
        - grafana.redevops.io
      secretName: grafana-tls
---
# to re-apply it since traefik was not running at the time it was applied the first time
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: slack-fastapi-app
  namespace: slack-fastapi
  labels:
    name: slack-fastapi-app
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    # for DO
    # cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    # for YC
    cert-manager.io/cluster-issuer: "yc-clusterissuer"
spec:
  rules:
    - host: api.redevops.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: slack-fastapi-app-service
                port:
                  number: 80
  tls:
    - hosts:
        - api.redevops.io
      secretName: api-redevops-io-tls

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: loki-gateway
#   namespace: prometheus
#   labels:
#     name: loki-gateway
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     cert-manager.io/cluster-issuer: "yc-clusterissuer"
# spec:
#   rules:
#     - host: loki.redevops.io
#       http:
#         paths:
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: loki-gateway
#                 port:
#                   number: 80
#   tls:
#     - hosts:
#         - loki.redevops.io
#       secretName: loki-tls
