---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: slack-fastapi
  name: slack-fastapi-app
spec:
  replicas: "{{num_replicas}}"
  selector:
    matchLabels:
      app: slack-fastapi-app
  template:
    metadata:
      labels:
        app: slack-fastapi-app
    spec:
      imagePullSecrets:
      - name: registrykey
      containers:
      - name: app
        image: "{{ app_image }}"
        #image: __APP_IMAGE__
        readinessProbe:
          httpGet:
            path: /api/health
            port: api-port
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: SLACK_FASTAPI_DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: slack_fastapi_db_user
        - name: SLACK_FASTAPI_DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: slack_fastapi_db_user
        - name: SLACK_FASTAPI_HOST
          value: "0.0.0.0"
        - name: SLACK_FASTAPI_WORKERS_COUNT
          value: "10"
        - name: SLACK_FASTAPI_DB_HOST
          value: "slack-fastapi-db-service"
        resources:
          limits:
            cpu: "300m"
            memory: "900Mi"  # Increased from 200Mi to 500Mi
        ports:
        - containerPort: 8000
          name: api-port
---
apiVersion: v1
kind: Service
metadata:
  namespace: slack-fastapi
  name: slack-fastapi-app-service
spec:
  type: NodePort
  selector:
    app: slack-fastapi-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: api-port
    name: api-port

---
# this ingress will be applied in monitoring after traefik ingress controller is up and running
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: slack-fastapi-app
#   namespace: slack-fastapi
#   labels:
#     name: slack-fastapi-app
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     # for DO
#     # cert-manager.io/cluster-issuer: "letsencrypt-issuer"
#     # for YC
#     cert-manager.io/cluster-issuer: "yc-clusterissuer"
# spec:
#   rules:
#     - host: api.redevops.io
#       http:
#         paths:
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: slack-fastapi-app-service
#                 port:
#                   number: 80
#   tls:
#     - hosts:
#         - api.redevops.io
#       secretName: api-redevops-io-tls
# ---
