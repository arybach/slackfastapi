---
# ServiceMonitor for FastAPI
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fastapi-monitor
  namespace: prometheus
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: slack-fastapi-app
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
    - port: "8000"
      interval: 15s
      path: "/metrics"

---
# Deployment for Postgres Exporter
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: slack-fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: wrouesnel/postgres_exporter
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://slack-fastapi:slack-fastapi@slack-fastapi-db-service:5432/?sslmode=disable

---
# ServiceMonitor for Postgres Exporter
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9187"
    interval: 15s

---
# Deployment for RabbitMQ Exporter
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-exporter
  namespace: slack-fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-exporter
  template:
    metadata:
      labels:
        app: rabbitmq-exporter
    spec:
      containers:
      - name: rabbitmq-exporter
        image: kbudde/rabbitmq-exporter
        env:
        - name: RABBIT_URL
          value: "http://slack-fastapi-rmq-service:15672"
        - name: RABBIT_USER
          value: "guest"
        - name: RABBIT_PASSWORD
          value: "guest"
---
# ServiceMonitor for RabbitMQ Exporter
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rabbitmq-exporter
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: rabbitmq-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9419"
    interval: 15s

---
# Ingress for Prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
  namespace: prometheus  # Set to the namespace of the Prometheus service
  labels:
    name: prometheus
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
spec:
  rules:
    - host: prometheus.solarwinds123.ru
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: kube-prom-stack-kube-prome-prometheus
                port:
                  number: 9090
  tls:
    - hosts:
        - prometheus.solarwinds123.ru
      secretName: api-solarwinds123-ru-tls
---
# Ingress for Grafana
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: prometheus  # Change this to the namespace of the Grafana service
  labels:
    name: grafana
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
spec:
  rules:
    - host: grafana.solarwinds123.ru
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: kube-prom-stack-grafana
                port:
                  number: 80
  tls:
    - hosts:
        - grafana.solarwinds123.ru
      secretName: api-solarwinds123-ru-tls
