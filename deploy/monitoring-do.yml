apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-monitor
  namespace: prometheus
spec:
  serviceMonitorSelector:
    matchLabels:
      monitor: "true"
  serviceMonitorNamespaceSelector: {}  # This selector is empty to select ServiceMonitors from all namespaces
  version: v2.44.0
  replicas: 1

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-self
  labels:
    app: kube-prom-stack-prometheus
    monitor: "true"
spec:
  endpoints:
  - interval: 30s
    port: web
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: kube-prom-stack-kube-prome-prometheus

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: traefik-monitor
  labels:
    app: traefik-ingress
    monitor: "true"
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: traefik-ingress
  namespaceSelector:
    matchNames:
      - traefik
  endpoints:
  - port: "web"
    interval: 60s
    path: "/metrics"

---
# ServiceMonitor for FastAPI
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fastapi-monitor
  labels:
    team: frontend
    monitor: "true"
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: slack-fastapi-app
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
    - port: "8000"
      interval: 60s
      path: "/metrics"

---
# ServiceMonitor for Postgres Exporter
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  labels:
    app: postgres-exporter
    monitor: "true"  # Added common label for Prometheus to discover
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9187"
    interval: 60s

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rabbitmq-exporter
  labels:
    app: rabbitmq-exporter
    monitor: "true"  # Added common label for Prometheus to discover
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: rabbitmq-exporter
  namespaceSelector:
    matchNames:
      - slack-fastapi
  endpoints:
  - port: "9419"
    interval: 60s

# ---
# # Ingress for Prometheus
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: prometheus
#   namespace: prometheus
#   labels:
#     name: prometheus
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     cert-manager.io/cluster-issuer: "letsencrypt-issuer"
# spec:
#   rules:
#     - host: prometheus.solarwinds123.ru
#       http:
#         paths:
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: kube-prom-stack-kube-prome-prometheus
#                 port:
#                   number: 9090
#   tls:
#     - hosts:
#         - prometheus.solarwinds123.ru
#       secretName: prometheus-tls
---
# Ingress for Grafana
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: prometheus
  labels:
    name: grafana
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
spec:
  rules:
    - host: grafana.solarwinds123.ru
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: kube-prom-stack-grafana
                port:
                  number: 80
  tls:
    - hosts:
        - grafana.solarwinds123.ru
      secretName: grafana-tls
---
# to re-apply since traefik was not running when it was deployed
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: slack-fastapi-app
  namespace: slack-fastapi
  labels:
    name: slack-fastapi-app
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    # for DO
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    # for YC
    # cert-manager.io/cluster-issuer: "yc-clusterissuer"
spec:
  rules:
    - host: api.redevops.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: slack-fastapi-app-service
                port:
                  number: 80
  tls:
    - hosts:
        - api.redevops.io
      secretName: api-redevops-io-tls
